<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sadr.dao.ElecMetersMapper">
	<resultMap id="BaseResultMap" type="com.sadr.domain.ElecMeters">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="id_hub" jdbcType="INTEGER" property="idHub" />
		<result column="id_meter" jdbcType="INTEGER" property="idMeter" />
		<result column="name" jdbcType="VARCHAR" property="name" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, id_hub, id_meter, name
	</sql>
	<select id="selectByExample" parameterType="com.sadr.domain.ElecMetersExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from elec_meters
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from elec_meters
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from elec_meters
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sadr.domain.ElecMetersExample">
		delete from elec_meters
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sadr.domain.ElecMeters">
		insert into elec_meters (ID, id_hub, id_meter,
		name)
		values (#{id,jdbcType=INTEGER}, #{idHub,jdbcType=INTEGER},
		#{idMeter,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.sadr.domain.ElecMeters">
		insert into elec_meters
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="idHub != null">
				id_hub,
			</if>
			<if test="idMeter != null">
				id_meter,
			</if>
			<if test="name != null">
				name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="idHub != null">
				#{idHub,jdbcType=INTEGER},
			</if>
			<if test="idMeter != null">
				#{idMeter,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sadr.domain.ElecMetersExample"
		resultType="java.lang.Long">
		select count(*) from elec_meters
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update elec_meters
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.idHub != null">
				id_hub = #{record.idHub,jdbcType=INTEGER},
			</if>
			<if test="record.idMeter != null">
				id_meter = #{record.idMeter,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update elec_meters
		set ID = #{record.id,jdbcType=INTEGER},
		id_hub = #{record.idHub,jdbcType=INTEGER},
		id_meter = #{record.idMeter,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sadr.domain.ElecMeters">
		update elec_meters
		<set>
			<if test="idHub != null">
				id_hub = #{idHub,jdbcType=INTEGER},
			</if>
			<if test="idMeter != null">
				id_meter = #{idMeter,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sadr.domain.ElecMeters">
		update elec_meters
		set id_hub = #{idHub,jdbcType=INTEGER},
		id_meter = #{idMeter,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>

	<!-- List<ElecMeters> getmeters(int idMsb); -->
	<select id="getmeters" parameterType="com.sadr.domain.ElecMeters"
		resultMap="BaseResultMap">
		SELECT * FROM elec_meters WHERE id_msb = #{idMsb} limit
		#{startpage},#{limit}
	</select>

	<!-- int getmetersCount(Integer idMsb); -->
	<select id="getmetersCount" parameterType="com.sadr.domain.ElecMeters"
		resultType="java.lang.Integer">
		SELECT count(*) FROM elec_meters WHERE id_msb = #{idMsb}
	</select>


	<!-- List<ElecMeters> getMeters(EngineRooms er); -->
	<select id="getMeters" parameterType="com.sadr.domain.EngineRooms"
		resultMap="BaseResultMap">
		SELECT * FROM elec_meters em,elec_meter_hub hub WHERE hub.id = em.id_hub AND hub.room_id =  #{id} limit
		#{startpage},#{limit}
	</select>

	<!-- int getMetersCount(EngineRooms er); -->
	<select id="getMetersCount" parameterType="com.sadr.domain.EngineRooms"
		resultType="java.lang.Integer">
		SELECT count(*) FROM elec_meters em,elec_meter_hub hub WHERE hub.id = em.id_hub AND hub.room_id =  #{id}
	</select>
</mapper>